<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[vim 常用命令总结]]></title>
      <url>/chengasd.github.io/2018/01/01/vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<img src="/chengasd.github.io/2018/01/01/vim-常用命令总结/2.jpg">
<h2 id="启动vim"><a href="#启动vim" class="headerlink" title="启动vim"></a>启动vim</h2><p>在命令行窗口输入以下命令即可<br>vim 直接启动vim<br>vim 文件名 打开vim并创建对应文件名的文件</p>
<a id="more"></a>
<h2 id="文件命令"><a href="#文件命令" class="headerlink" title="文件命令"></a>文件命令</h2><p>vim file 打开单个文件<br>vim file1 file2 file3 同时打开多个文件<br>:open file 在vim窗口中打开新文件<br>:bn 切换到下一个文件<br>:bp 切换到上一个文件<br>:args 查看当前打开的文件列表<br>:e ftp://192.168.0.1/aaa.txt 打开远程文件</p>
<h2 id="vim模式"><a href="#vim模式" class="headerlink" title="vim模式"></a>vim模式</h2><p>命令模式（vi 文件名 进入）<br>插入模式（按i键进入） 左下角显示–INSERT–<br>编辑模式（按:键进入） </p>
<h2 id="基本编辑"><a href="#基本编辑" class="headerlink" title="基本编辑"></a>基本编辑</h2><p>a       在当前光标后插入文本<br>A       在本行行尾插入文本<br>i       在当前光标前插入文本<br>I       在本行行前插入文本<br>o       在光标下插入新行<br>O       在光标上插入新行</p>
<h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><p>hjkl    光标移动1位，分别代表上、下、左、右<br>数字0    光标移动到本行开头<br>^       光标移动到第一个非空字符<br>$       光标移动到本行行尾<br>w       光标移动到下一个单词或标点开头<br>W       光标移动到下一个单词开头 忽略标点<br>b       光标移动到上一个单词或标点开头<br>B       光标移动到上一个单词开头 忽略标点<br>ctrl+f  光标下翻一页<br>ctrl+b  光标上翻一页<br>ctrl+d  光标下翻半页<br>ctrl+u  光标上翻半页<br>nG      光标移至第n行<br>G       光标移至最后一行<br>n+      光标向下跳n行<br>n-      光标向上跳n行<br>H       光标移至当前屏幕的第一行<br>L       光标移至当前屏幕的最后一行</p>
<h2 id="删除和撤销"><a href="#删除和撤销" class="headerlink" title="删除和撤销"></a>删除和撤销</h2><p>x       删除当前字符（剪切）<br>nx      向后删除当前行内的n个字符（剪切）<br>dd      删除当前行（剪切）<br>ndd     向下删除当前行在内的n行（剪切）<br>dW      删除当前单词（剪切）<br>d$      删除当前字符到当前行的末尾（剪切）<br>d0      删除当前字符到当前行的行头（剪切）<br>d^      删除当前字符到下一个非空字符（剪切）<br>dG      删除当前行到文件末尾（剪切）<br>u       撤销上一次操作<br>U       撤销当前行的所有操作<br>ctrl+r  撤销的撤销</p>
<h2 id="剪切、复制和粘贴"><a href="#剪切、复制和粘贴" class="headerlink" title="剪切、复制和粘贴"></a>剪切、复制和粘贴</h2><blockquote>
<p>x和d键实质上是剪切键。 y是复制键，p是粘贴键</p>
</blockquote>
<p>p       粘贴到当前行后面<br>P       粘贴到当前行前面<br>yy      复制当前行<br>nyy     向下复制当前行在内的n行<br>yw      当前字符到下一单词的起始处<br>y$      当前字符到当前行的末尾<br>y^      当前字符到当前行下一个非空字符<br>y0      当前字符到当前行的行首<br>yG      当前行到文件末尾</p>
<h2 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h2><p>fx      光标移至本行下一处出现字符x的位置，输入分号重复上一次搜索<br>/       使用/命令后，输入要搜索的单词或短语，enter结束, n往下查询,N往上查询<br>:s/old/new      用new替换行中首次出现的old（:分号用于启动一条ex命令）<br>:s/old/new/g    用new替换行中所有的old<br>:n,m s/old/new/g用new替换从n到m行里所有的old<br>:%s/old/new/g   用new替换当前文件里所有的old<br>:set nu         显示行号<br>:set nonu       取消显示行号</p>
<h2 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h2><p>:w      仅保存文件<br>:q      退出文件，没有修改<br>:q!     放弃修改并推出文件<br>:wq     保存并退出文件<br>:w file1文件另存为file1<br>ZZ      保存并退出文件</p>
<img src="/chengasd.github.io/2018/01/01/vim-常用命令总结/1.png">
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[再见2017，你好2018]]></title>
      <url>/chengasd.github.io/2017/12/31/%E5%86%8D%E8%A7%812017%EF%BC%8C%E4%BD%A0%E5%A5%BD2018/</url>
      <content type="html"><![CDATA[<img src="/chengasd.github.io/2017/12/31/再见2017，你好2018/3753.JPG">
<h2 id="再见2017"><a href="#再见2017" class="headerlink" title="再见2017"></a>再见2017</h2><p>眨眼间，即将告别2017。<br>这一年经历的太多，有悲有喜。<br>我还是那个我，周围的人却变了一遍，<br>有老朋友的辞职高就，也有亲人寿终离去。<br>唯一不变的是2016年要求自己做到的事还是没完成，<br>只能放到2018年继续了。<br><a id="more"></a></p>
<h3 id="跳了第一次槽"><a href="#跳了第一次槽" class="headerlink" title="跳了第一次槽"></a>跳了第一次槽</h3><p>4月份从老东家辞职了。<br>从现在最回看两年中的自己，技术谈不上有多少进步，<br>一方面是自己在学习路线上绕了很多弯导致中途放弃，<br>另一方面是接触的都是成型的系统，做的更多的是业务相关的二次开发。<br>所以毅然选择辞职，选择跳到更加偏互联网的公司。<br>也要感谢老东家，两年的经历让刚毕业的自己磨练出了如何快速定位问题。</p>
<p>在新的公司承受了更大的压力，从而更好的激发自己的潜能，<br>也接触更加前沿的技术，开阔了视野。<br>当然最重要的还是钱多了～～～</p>
<h3 id="读了几本小说"><a href="#读了几本小说" class="headerlink" title="读了几本小说"></a>读了几本小说</h3><p>京东618活动满了一堆书，技术书还没怎么翻，<br>小说倒看完两本了，捂脸。<br>渐渐喜欢去图书馆坐上一下午，看看小说。<br>毕竟书中自有黄金屋，看书的时候也能丰富更多的知识，<br>也可以把浮躁的自己沉淀下来。</p>
<p>列下今年看完的书：</p>
<blockquote>
<p><strong>《白鹿原》 ♥♥♥♥♥</strong><br>赶在电视停播的时候看的，前前后后花了16个小时看完。世界那么大，就怕看不远，在白鹿两家中，比起保守严谨的白家来说，更加钦佩激进的鹿家，处于战争的漩涡，或进或退，引起一场场风搅雪。</p>
<p><strong>《乖，摸摸头》 ♥♥♥</strong><br>说实话，书中的几个故事内容已然记不太清了，后面每次看书还是要写好读书笔记。</p>
<p><strong>《我有故事，你有酒吗？》 ♥♥♥</strong><br>很可惜这么多故事没有一个感同身受的，毕竟单身很久了，ORZ.</p>
<p><strong>《异乡人》 ♥♥♥</strong><br>订阅的B站up主推荐，也被书名吸引，看下来却感觉和这个书名不是很匹配，故事也不是那么的大起大落，比较平淡。 不过封面的一段话还是比较有深意的。<br><strong>我知道这世界我无处容身，只是，你凭什么审判我的灵魂？</strong></p>
<p><strong>《摆渡人》 ♥♥♥</strong><br>京东上面推荐的热门书籍，整体看下来，故事比较通俗易懂，但感觉这本书并不像其宣传的那么好，也许有的时候好书的界定因人而异吧。</p>
<p><strong>《我的应许之地》 ♥♥♥♥</strong><br>一本关于以色列的书籍，讲述了以色列这个国家的前身以及巴以冲突的来源，<br>还未看完，个人比较推荐。</p>
</blockquote>
<h3 id="送走了三位老人"><a href="#送走了三位老人" class="headerlink" title="送走了三位老人"></a>送走了三位老人</h3><img src="/chengasd.github.io/2017/12/31/再见2017，你好2018/3752.JPG">
<p>一年送走了三位老人。<br>3月7号，奶奶因病离世。<br>12月22号，爷爷也离去。<br>12月28号，外公寿终。</p>
<p>在奶奶和外公走之前都回去看到最后一面。<br>漂泊在外，能做到的也只有千里奔丧，赶回家送老人下葬。<br>虽说生老病死乃人之常情，但当这一切发生在自己身上时，悲伤还是止不住的。<br>父辈那代都是好几个兄弟姐妹操持丧事，<br>不敢想象将来我们独生这一代该如何面对这种事。<br>平时大家还是多锻炼身体。</p>
<h3 id="独自自由行"><a href="#独自自由行" class="headerlink" title="独自自由行"></a>独自自由行</h3><img src="/chengasd.github.io/2017/12/31/再见2017，你好2018/3754.JPG">
<p>16年末实现了自己第一次出境自由行，在曼谷跨年，安排行程的时候也尽量去过人不常去的景点和城市，现在想想还是挺佩服自己的。<br>游记：<a href="http://www.mafengwo.cn/i/6621839.html" target="_blank" rel="noopener">http://www.mafengwo.cn/i/6621839.html</a></p>
<h2 id="你好2018"><a href="#你好2018" class="headerlink" title="你好2018"></a>你好2018</h2><p>18年的愿望：<br>1、保持每周读书的习惯<br>2、多深究技术，开始多写些技术博客<br>3、保持每周2次跑步<br>4、亲人&amp;自己都健健康康<br>5、也是最大的愿望 告别单身！！</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[花有重开日，人无再少年]]></title>
      <url>/chengasd.github.io/2017/12/22/%E8%8A%B1%E6%9C%89%E9%87%8D%E5%BC%80%E6%97%A5%EF%BC%8C%E4%BA%BA%E6%97%A0%E5%86%8D%E5%B0%91%E5%B9%B4/</url>
      <content type="html"><![CDATA[<img src="/chengasd.github.io/2017/12/22/花有重开日，人无再少年/1222.jpeg">
<p>没有人再用孙子称呼我了。</p>
<p>从来没想到一切来的这么的突然，3月才送走亲爱的奶奶，爷爷也从此刻离开了。</p>
<p>7年漂泊在外，每年春节回去只知道呆在家里玩电脑，和朋友聚会，去看望爷爷奶奶的次数真的少之又少，现在真的想回报您们却没有机会了。</p>
<a id="more"></a>
<p>小时候在爷爷奶奶家玩，奶奶总是包着馄饨，做团子，爷爷下地种菜分给各家烧菜吃，一家人在门口刮丝瓜皮，画面都是那么的熟悉。我开始寄宿上高中，奶奶会塞钱给我让我自己买东西吃，看着手里零散的纸票钱，我知道这是您们天天起早跑到市场卖菜挣得血汗钱，省吃俭用地过日子，每年过年还是包红包给每个孙子，走的时候也没享受什么福，来不及向您们说声道谢，从不曾对您们说过一声谢谢，只希望在另外一个世界，您们可以不用再受苦了。</p>
<p>对不起。</p>
<pre><code>————记于 23号宝安机场
</code></pre>]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[活动公共系统设计]]></title>
      <url>/chengasd.github.io/2017/12/19/%E6%B4%BB%E5%8A%A8%E5%85%AC%E5%85%B1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>①单品、满减、搭售等各个活动信息都是独立的一套活动表。<br>②每次新增促销活动需要重新开发活动相关crud代码。<br>③不利于维护，代码冗余，无意义的重复开发较多。</p>
<h2 id="1、整理后的活动公共字段"><a href="#1、整理后的活动公共字段" class="headerlink" title="1、整理后的活动公共字段"></a>1、整理后的活动公共字段</h2><h3 id="整理后活动可以分为五个维度"><a href="#整理后活动可以分为五个维度" class="headerlink" title="整理后活动可以分为五个维度"></a>整理后活动可以分为五个维度</h3><table>
<thead>
<tr>
<th style="text-align:left">维度</th>
<th style="text-align:left">字段</th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">活动基本信息</td>
<td style="text-align:left">活动名称</td>
<td style="text-align:left">活动时间</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">活动作用域</td>
<td style="text-align:left">Sku</td>
<td style="text-align:left">Spu</td>
<td style="text-align:left">品牌</td>
<td style="text-align:left">类目</td>
<td style="text-align:left">店铺</td>
<td style="text-align:left">排除信息</td>
</tr>
<tr>
<td style="text-align:left">促销条件</td>
<td style="text-align:left">推广平台</td>
<td style="text-align:left">订单金额</td>
<td style="text-align:left">订单数量</td>
<td style="text-align:left">用户等级</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">促销规则</td>
<td style="text-align:left">库存限购规则</td>
<td style="text-align:left">优惠金额限制</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">促销优惠</td>
<td style="text-align:left">减N元</td>
<td style="text-align:left">打N折</td>
<td style="text-align:left">送赠品</td>
<td style="text-align:left">N元促销</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<img src="/chengasd.github.io/2017/12/19/活动公共系统设计/活动公共系统.png" title="活动公共系统">
<h3 id="活动公共系统字段设计"><a href="#活动公共系统字段设计" class="headerlink" title="活动公共系统字段设计"></a>活动公共系统字段设计</h3><img src="/chengasd.github.io/2017/12/19/活动公共系统设计/活动公共系统1.png" title="活动公共系统字段设计">
]]></content>
      
        <categories>
            
            <category> 系统设计 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 设计 </tag>
            
            <tag> 活动公共 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 常用命令之wc、sort]]></title>
      <url>/chengasd.github.io/2017/12/11/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8Bwc/</url>
      <content type="html"><![CDATA[<img src="/chengasd.github.io/2017/12/11/Linux-常用命令之wc/1.jpeg">
<a id="more"></a>
<h2 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h2><blockquote>
<p>wc命令用于统计给定文件中的字节数、字数、行数。</p>
</blockquote>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><ul>
<li>c 统计字节数。</li>
<li>l 统计行数。</li>
<li>w 统计单词数。</li>
<li>m 统计字符数</li>
</ul>
<p>-lcw 组合使用按行数、字数、字节数、文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc －lcw filename1</span><br></pre></td></tr></table></figure></p>
<img src="/chengasd.github.io/2017/12/11/Linux-常用命令之wc/wc.png">
<h3 id="常用场景"><a href="#常用场景" class="headerlink" title="常用场景"></a>常用场景</h3><p>1、统计vim目录下，.txt文件的数量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find vim/ -name &quot;*.txt&quot; | wc -l</span><br></pre></td></tr></table></figure></p>
<p>2、统计vim目录下所有txt文件的行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find vim/ -name &quot;*.txt&quot; | xargs cat | wc -l</span><br></pre></td></tr></table></figure></p>
<p>3、统计vim目录下所有txt文件排除以1开头的行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find vim/ -name &quot;*.txt&quot; | xargs cat | grep -v ^1 | wc -l</span><br></pre></td></tr></table></figure></p>
<img src="/chengasd.github.io/2017/12/11/Linux-常用命令之wc/wc1.png">
<h2 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h2><blockquote>
<p>sort命令可以进行排序，并将排序结果标准输出</p>
</blockquote>
<h3 id="命令参数-1"><a href="#命令参数-1" class="headerlink" title="命令参数"></a>命令参数</h3><ul>
<li>u 排序并且排除重复项</li>
<li>r 反向排序，即降序</li>
<li>o 可以将排序结果输出到源文件中</li>
<li>n 原来数字是按照字符串进行排序，－n采用数字大小进行排序</li>
<li>t 指定分隔符</li>
<li>k 指定哪一个分割区域进行排序</li>
</ul>
<h3 id="常用场景-1"><a href="#常用场景-1" class="headerlink" title="常用场景"></a>常用场景</h3><p>1、对文件内容进行排序  顺序   sort filename<br>2、采用数字规则对文件内容进行排序  顺序  sort -n filename<br>3、采用数字规则对文件内容进行降序排序    sort -n -r filename<br>4、按照：分号进行分割后取第四块数字进行排序  sort -n -k 4 -t : filename<br>5、将排序结果保存到源文件中  sort -n filename -o filename </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sort filename</span><br><span class="line">sort -n filename</span><br><span class="line">sort -n -r filename</span><br><span class="line">sort -n -k 4 -t : filename</span><br><span class="line">sort -n -k 4 -t : filename -o filename</span><br></pre></td></tr></table></figure>
<img src="/chengasd.github.io/2017/12/11/Linux-常用命令之wc/sort.png">
<p>1、按数字统计sort.txt 并列出没行的重复次数。<br>2、按重复次数 降序 统计sort.txt中的排序<br>3、取2中的统计结果的前3条数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sort -n sort.txt | uniq -c </span><br><span class="line">sort -n sort.txt | uniq -c | sort -k 1 -n -r</span><br><span class="line">sort -n sort.txt | uniq -c | sort -k 1 -n -r | head -3</span><br></pre></td></tr></table></figure>
<img src="/chengasd.github.io/2017/12/11/Linux-常用命令之wc/sort2.png">
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 常用命令之grep、ps]]></title>
      <url>/chengasd.github.io/2017/12/10/Linux%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/1.jpeg">
<a id="more"></a>
<p>Linux命令工作后经常用到，比如定位问题查看线上日志、shell脚本等，所以学好Linux命令还是很重要的，此篇只记录工作后比较常用的命令。</p>
<h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><blockquote>
<p>grep是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>
</blockquote>
<p>1、在文件中搜索单词，返回包含”test”的文本行<br>2、统计文件或者文本中包含匹配字符串的行数 -c<br>3、输出包含匹配字符串的行数 -n<br>4、搜索多个文件并查找匹配文本在哪些文件中 -l<br>5、输出除之外的所有行 -v<br>6、使用正则表达式 -E<br>7、忽略大小写 -i</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep test filename1 filename2 filename3 --color</span><br><span class="line">grep -c test filename1=</span><br><span class="line">grep -n test filename1</span><br><span class="line">grep -l test filename1 filename2</span><br><span class="line">grep -v test filename1</span><br><span class="line">grep -E &quot;[1-9]+&quot; filename1</span><br><span class="line">grep -i TEST filename1</span><br></pre></td></tr></table></figure>
<img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/grep.png">
<h3 id="常用场景"><a href="#常用场景" class="headerlink" title="常用场景"></a>常用场景</h3><p>1、查找制定进程            ps -ef|grep heso<br>2、查找指定进程个数         ps -ef|grep heso -c<br>3、找出以1开头的行内容      cat test.txt | grep ^1<br>4、找出以a结尾的行内容      cat test.txt | grep a$<br>5、显示包含1231或者1234字符的内容行      cat test.txt | grep -E “1231|1234”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep heso</span><br><span class="line">ps -ef|grep java -c</span><br><span class="line">cat test.txt | grep ^1</span><br><span class="line">cat test.txt | grep a$</span><br><span class="line">cat test.txt | grep -E &quot;1231|1234&quot;</span><br></pre></td></tr></table></figure>
<img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/grep2.png">
<p>1、显示匹配的后n行    grep  -A n<br>2、显示匹配的前n行    grep  -B n<br>3、显示匹配的前后n行   grep -C n</p>
<img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/grep3.png">
<h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><blockquote>
<p>ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。</p>
</blockquote>
<h3 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h3><p>a  显示所有进程<br>-a 显示同一终端下的所有程序<br>-A 显示所有进程<br>c  显示进程的真实名称<br>-N 反向选择<br>-e 等于“-A”<br>e  显示环境变量<br>f  显示程序间的关系<br>-H 显示树状结构<br>r  显示当前终端的进程<br>T  显示当前终端的所有程序<br>u  指定用户的所有进程<br>-au 显示较详细的资讯<br>-aux 显示所有包含其他使用者的行程<br>-C&lt;命令&gt; 列出指定命令的状况<br>–lines&lt;行数&gt; 每页显示的行数<br>–width&lt;字符数&gt; 每页显示的字符数<br>–help 显示帮助信息<br>–version 显示版本显示</p>
<h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><h4 id="显示进程信息-aux"><a href="#显示进程信息-aux" class="headerlink" title="显示进程信息 aux"></a>显示进程信息 aux</h4><p>ps aux 是用BSD的格式来显示 java这个进程<br>输出：<br><img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/ps1.png"></p>
<p>显示的项目有：USER , PID , %CPU , %MEM , VSZ , RSS , TTY , STAT , START , TIME , COMMAND</p>
<p>说明：<br>USER：该 process 属于那个使用者账号的<br>PID ：该 process 的号码<br>%CPU：该 process 使用掉的 CPU 资源百分比<br>%MEM：该 process 所占用的物理内存百分比<br>VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)<br>RSS ：该 process 占用的固定的内存量 (Kbytes)<br>TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。<br>STAT：该程序目前的状态，主要的状态有<br>R ：该程序目前正在运作，或者是可被运作<br>S ：该程序目前正在睡眠当中 (可说是 idle 状态)，但可被某些讯号 (signal) 唤醒。<br>T ：该程序目前正在侦测或者是停止了<br>Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态<br>START：该 process 被触发启动的时间<br>TIME ：该 process 实际使用 CPU 运作的时间<br>COMMAND：该程序的实际指令</p>
<h4 id="显示进程信息-ef"><a href="#显示进程信息-ef" class="headerlink" title="显示进程信息 -ef"></a>显示进程信息 -ef</h4><p>ps -ef 是用标准的格式显示java这个进程<br>输出：<br><img src="/chengasd.github.io/2017/12/10/Linux%20常用命令/ps2.png"><br>显示的项目有：UID , PID , PPID , C , STIME , TTY , TIME , CMD</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
